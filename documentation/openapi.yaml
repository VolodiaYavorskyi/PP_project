openapi: "3.0.0"
info:
  title: "Pharmacy API"
  description: "This is a simple pharmacy server. Here you can operate with medicines as a provisor and as a user."
  version: "1.0.0"
tags:
- name: "provisor"
  description: "Operations with medicines"
- name: "user"
  description: "Oparations as user"
paths:
  /drug:
    post:
      tags:
      - "provisor"
      summary: "Add a new drug to the base"
      parameters:
      - in: "query"
        name: "Drug"
        description: "Drug object that needs to be added to the pharmacy"
        required: true
        schema:
          $ref: "#/components/schemas/Drug"
      responses:
        '200':
          description: "OK"
        '405':
          description: "Invalid input"
    put:
      tags:
      - "provisor"
      summary: "Updata an existing drug"
      parameters:
      - in: "query"
        name: "Drug"
        description: "Drug to be updated"
        required: true
        schema:
          $ref: "#/components/schemas/Drug"
      responses:
        '200':
          description: "OK"
        '404':
          description: "Not found"
        '405':
          description: "Invalid input"
  /drug/{drugId}:
    delete:
      tags:
      - "provisor"
      summary: "Deletes an existing drug"
      parameters:
      - name: "drugId"
        in: "path"
        description: "Id of a drug"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "OK"
        '404':
          description: "Not found"
        '405':
          description: "Invalid input"
  /user/drug/{drugId}:
    get:
      tags:
      - "user"
      summary: "Get information about a drug by id"
      parameters:
      - in: "path"
        name: "drugId"
        description: "Id of a drug"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "OK"
        '404':
          description: "Not found"
        '405':
          description: "Invalid input"
  /user/order/:
    post:
      tags:
      - "user"
      summary: "Make an order"
      parameters:
      - in: "query"
        name: "Order"
        description: "Id of a drug and quantity"
        required: true
        schema:
          $ref: "#/components/schemas/Order"
      responses:
        '200':
          description: "OK"
        '405':
          description: "Invalid input"
components:
  schemas:
    Drug:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        drugName:
          type: "string"
        drugDescription:
          type: "string"
        price:
          type: "integer"
          format: "int64"
        quantity:
          type: "integer"
          format: "int64"
    Order:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        quantity:
          type: "integer"
          format: "int64"
    Demand:
      type: "object"
      properties:
        drugs:
          type: "array"
          items:
            $ref: "#/components/schemas/Drug"
